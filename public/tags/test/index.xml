<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Test on Pablo Lopez</title>
    <link>http://localhost:1313/tags/test/</link>
    <description>Recent content in Test on Pablo Lopez</description>
    <image>
      <title>Pablo Lopez</title>
      <url>http://localhost:1313/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>http://localhost:1313/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- 0.147.3</generator>
    <language>en</language>
    <lastBuildDate>Fri, 10 Jan 2025 15:09:39 +0100</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/test/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Load Testing PostgeSQL using Locust</title>
      <link>http://localhost:1313/posts/locust_postgres/</link>
      <pubDate>Fri, 10 Jan 2025 15:09:39 +0100</pubDate>
      <guid>http://localhost:1313/posts/locust_postgres/</guid>
      <description>&lt;p&gt;I recently needed to run load tests on a PostgreSQL database. Postgres is no question a reliable and scalable database ready for production use cases, but there might be times when you’ll need to confirm it can handle your specific use case. This might be necessary if you’re using a PostgreSQL database hosted by a third party or if you want to check if your current instance size and specs can manage your existing load.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Test Driven Development</title>
      <link>http://localhost:1313/posts/test_driven_development/</link>
      <pubDate>Fri, 13 Dec 2024 15:52:46 +0100</pubDate>
      <guid>http://localhost:1313/posts/test_driven_development/</guid>
      <description>&lt;p&gt;We all know that person that always asks for unit tests on your Pull Request. You curse under your breath wondering why they have nothing better to do than ruining your day.&lt;/p&gt;
&lt;p&gt;Unit tests let you know if your codebase is behaving as expected. As long as you’ve written good tests, you can be happy your codebase is healthy if tests are showing &lt;em&gt;green&lt;/em&gt;. Any time a test appears in &lt;em&gt;red&lt;/em&gt;, you will know that you’ve introduced a bug and you can fix it before it hits production.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
